{"version":3,"sources":["components/SideBar.js","components/TopBar.js","components/Headline.js","components/Chart.js","components/Table.js","components/Dashboard.js","components/doctors/AddDoctor.js","components/doctors/MegaTable.js","components/doctors/AllDoctors.js","components/doctors/EditDoctor.js","components/doctors/DetailsDoctor.js","components/patients/AddPatient.js","components/patients/MegaTable.js","components/patients/AllPatients.js","components/patients/EditPatient.js","components/patients/DetailsPatient.js","components/appoinments/AddAppoinment.js","components/appoinments/MegaTable.js","components/appoinments/AllAppoinments.js","components/appoinments/EditAppoinment.js","components/appoinments/DetailsAppoinment.js","components/roomAllotments/AddRoomAllotment.js","components/roomAllotments/MegaTable.js","components/roomAllotments/AllRooms.js","components/roomAllotments/AddRoom.js","components/roomAllotments/EditRoomAllotment.js","App.js","serviceWorker.js","store/reducers/adminReducer.js","store/actions/types.js","store/reducers/rootReducer.js","store/index.js","store/localStorage.js","index.js"],"names":["SideBar","useState","isShowDoctorsDrawer","setIsShowDoctorsDrawer","isShowPatientsDrawer","setIsShowPatientsDrawer","isShowAppointmentsDrawer","setIsShowAppointmentsDrawer","isShowRoomAllotmentsDrawer","setIsShowRoomAllotmentsDrawer","isShowPaymentsDrawer","setIsShowPaymentsDrawer","className","to","LocalHospitalOutlined","HomeOutlined","onClick","event","preventDefault","sidebar","document","getElementsByClassName","clientWidth","console","log","SupervisorAccountOutlined","ExpandLessOutlined","ExpandMoreOutlined","AccessibleOutlined","CreateOutlined","LockOpenOutlined","AttachMoneyOutlined","QuestionAnswerOutlined","PhoneIphoneOutlined","EmailOutlined","TopBar","MenuOutlined","FullscreenOutlined","SearchOutlined","NotificationsOutlined","PersonOutlineOutlined","Headline","headline","title","LineChart","lineChartData","setLineChartData","useEffect","labels","datasets","label","data","borderColor","backgroundColor","hoverBackgroundColor","borderWidth","Card","height","options","responsive","maintainAspectRatio","display","text","fontSize","fontColor","fontStyle","legend","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","minor","gridLines","lineWidth","xAxes","layout","padding","top","left","right","bottom","BarChart","barChartData","setBarChartData","align","PieChart","pieChartData","setPieChartData","StyledTableCell","withStyles","head","color","fontWeight","body","TableCell","StyledTableRow","theme","root","palette","action","hover","TableRow","createData","firstRow","secondRow","thirdRow","fourthRow","fifthRow","rows","Chip","size","useStyles","makeStyles","table","minWidth","CustomizedTables","classes","TableContainer","Table","TableHead","TableBody","map","row","key","Dashboard","Typography","variant","BarChartOutlined","style","borderBottom","AddDoctor","setDoctorName","setSpecialization","setAge","setEmail","setDoctorDetails","setDateOfBirth","setExperience","setPhone","setGender","setAddress","checked","setChecked","setProfilePic","paddingBottom","onSubmit","alert","TextField","required","placeholder","InputLabelProps","shrink","onChange","e","target","value","select","SelectProps","native","type","error","helperText","multiline","FormControlLabel","control","Checkbox","Button","marginTop","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","component","Tooltip","IconButton","aria-label","width","paper","marginBottom","border","clip","margin","overflow","position","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","setSearch","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","setAlert","componentRef","useRef","name","doctorName","phone","specialization","experience","availability","printAction","useReactToPrint","content","current","handleAlert","emptyRows","Math","min","length","justifyContent","Alert","onClose","severity","ref","aria-labelledby","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","ButtonGroup","window","innerWidth","PrintOutlined","PictureAsPdfOutlined","GetAppOutlined","textDecoration","startIcon","AssignmentOutlined","marginLeft","Edit","DeleteOutlined","AllDoctors","EditDoctor","doctorId","useParams","DetailsDoctor","doctorDetailsRef","doctorActivityRef","doctorDetailsPrintAction","doctorActivityPrintAction","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","src","AddPatient","setPatientName","AllPatients","EditPatient","patientId","DetailsPatient","patientDetailsRef","patientVisitsRef","patientPaymentRef","patientDetailsPrintAction","patientVisitsPrintAction","patientPaymentPrintAction","AddAppoinment","setPatientId","setDoctorId","setDepartment","setAppoinmentDate","setTimeSlot","setTokenNumber","setProblem","appoimentId","token","problem","status","AllAppoinments","EditAppoinment","timeSlot","appoinmentId","DetailsAppoinment","detailsAppoinmentRef","doctorAppoinmentPrintAction","AddRoomAllotment","setRoomNumber","setRoomType","setAllotmentDate","setDishchargeDate","roomNo","roomType","patientName","allotmentDate","dischargeDate","AllRooms","setDetails","EditRoomAllotment","allotmentId","disabled","App","exact","path","AddRoom","Boolean","location","hostname","match","init","adminLoggedIn","adminReducer","state","payload","admin","rootReducer","combineReducers","middlewares","thunk","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","compose","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e83157c5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './Sidebar.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {ExpandMoreOutlined,\r\n        ExpandLessOutlined,\r\n        LocalHospitalOutlined,\r\n        HomeOutlined,\r\n        SupervisorAccountOutlined,\r\n        AccessibleOutlined,\r\n        CreateOutlined,\r\n        LockOpenOutlined,\r\n        AttachMoneyOutlined,\r\n        QuestionAnswerOutlined,\r\n        PhoneIphoneOutlined,\r\n        EmailOutlined,\r\n        } from '@material-ui/icons';\r\n    \r\nfunction SideBar() {\r\n    const[isShowDoctorsDrawer, setIsShowDoctorsDrawer] = useState(false)\r\n    const[isShowPatientsDrawer, setIsShowPatientsDrawer] = useState(false)\r\n    const[isShowAppointmentsDrawer, setIsShowAppointmentsDrawer] = useState(false)\r\n    const[isShowRoomAllotmentsDrawer, setIsShowRoomAllotmentsDrawer] = useState(false)\r\n    const[isShowPaymentsDrawer, setIsShowPaymentsDrawer] = useState(false)\r\n\r\n\r\n    const showDoctorsDrawer = (event) => {\r\n        event.preventDefault()\r\n        let sidebar = document.getElementsByClassName('sidebar')[0].clientWidth\r\n        console.log(sidebar)\r\n        if(sidebar <= 80 ) {\r\n            setIsShowDoctorsDrawer(!isShowDoctorsDrawer)      \r\n            setIsShowPatientsDrawer(false)\r\n            setIsShowAppointmentsDrawer(false)\r\n            setIsShowRoomAllotmentsDrawer(false)\r\n            setIsShowPaymentsDrawer(false) \r\n        \r\n        } else {\r\n            setIsShowDoctorsDrawer(!isShowDoctorsDrawer)\r\n        }\r\n                \r\n    }\r\n\r\n    const showPatientsDrawer = (event) => {\r\n        event.preventDefault()\r\n        let sidebar = document.getElementsByClassName('sidebar')[0].clientWidth\r\n        if(sidebar <= 80 ) {\r\n            setIsShowPatientsDrawer(!isShowPatientsDrawer)      \r\n            setIsShowDoctorsDrawer(false)\r\n            setIsShowAppointmentsDrawer(false)\r\n            setIsShowRoomAllotmentsDrawer(false)\r\n            setIsShowPaymentsDrawer(false) \r\n        \r\n        } else {\r\n            setIsShowPatientsDrawer(!isShowPatientsDrawer)    \r\n        }\r\n    }\r\n\r\n    const showAppointmentsDrawer = (event) => {\r\n        event.preventDefault()\r\n        let sidebar = document.getElementsByClassName('sidebar')[0].clientWidth\r\n        if(sidebar <= 80 ) {\r\n            setIsShowAppointmentsDrawer(!isShowAppointmentsDrawer)      \r\n            setIsShowDoctorsDrawer(false)\r\n            setIsShowPatientsDrawer(false)\r\n            setIsShowRoomAllotmentsDrawer(false)\r\n            setIsShowPaymentsDrawer(false) \r\n        \r\n        } else {\r\n            setIsShowAppointmentsDrawer(!isShowAppointmentsDrawer)    \r\n        }\r\n    }\r\n\r\n    const showRoomAllotmentsDrawer = (event) => {\r\n        event.preventDefault()\r\n        let sidebar = document.getElementsByClassName('sidebar')[0].clientWidth\r\n        if(sidebar <= 80 ) {\r\n            setIsShowRoomAllotmentsDrawer(!isShowRoomAllotmentsDrawer)      \r\n            setIsShowDoctorsDrawer(false)\r\n            setIsShowPatientsDrawer(false)\r\n            setIsShowAppointmentsDrawer(false)\r\n            setIsShowPaymentsDrawer(false) \r\n        \r\n        } else {\r\n            setIsShowRoomAllotmentsDrawer(!isShowRoomAllotmentsDrawer)    \r\n        }\r\n    }\r\n    \r\n    const showPaymentsDrawer = (event) => {\r\n        event.preventDefault()\r\n        let sidebar = document.getElementsByClassName('sidebar')[0].clientWidth\r\n        if(sidebar <= 80 ) {\r\n            setIsShowPaymentsDrawer(!isShowPaymentsDrawer)      \r\n            setIsShowDoctorsDrawer(false)\r\n            setIsShowPatientsDrawer(false)\r\n            setIsShowAppointmentsDrawer(false)\r\n            setIsShowRoomAllotmentsDrawer(false)\r\n        \r\n        } else {\r\n            setIsShowPaymentsDrawer(!isShowPaymentsDrawer)    \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n            <Link to=\"/\" className=\"sidebar__logo\">\r\n                <LocalHospitalOutlined/> HMS \r\n            </Link>\r\n\r\n            <Link to='/' className=\"sidebar__item\">\r\n                <div className=\"sidebar__itemIcon\">\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <HomeOutlined /> <span> Dashboard </span>\r\n                    </div>\r\n                    {/* <ExpandMoreOutlined /> */}\r\n                </div>\r\n                {/* <div className=\"sidebar__itemDrawer\">\r\n                </div> */}\r\n            </Link>\r\n\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={showDoctorsDrawer} className={isShowDoctorsDrawer ? \"sidebar__itemIcon sidebar__itemIconBg\" : \"sidebar__itemIcon\"}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <SupervisorAccountOutlined /> <span> Doctors </span>\r\n                    </div>\r\n                    <span> {isShowDoctorsDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={isShowDoctorsDrawer ? \"sidebar__itemDrawer sidebar__itemDrawerShow\" : \"sidebar__itemDrawer\"}>\r\n                    <Link to=\"/addDoctor\">Add Doctor</Link>\r\n                    <Link to=\"/allDoctors\">All Doctors</Link>\r\n                    <Link to=\"/detailsDoctor/01\">Doctor Details</Link>\r\n                    <Link to=\"/editDoctor/01\">Edit Doctor</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={showPatientsDrawer} className={isShowPatientsDrawer ? \"sidebar__itemIcon sidebar__itemIconBg\" : \"sidebar__itemIcon\"}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <AccessibleOutlined /> <span> Patients </span>\r\n                    </div>\r\n                    <span> {isShowPatientsDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={isShowPatientsDrawer ? \"sidebar__itemDrawer sidebar__itemDrawerShow\" : \"sidebar__itemDrawer\"}>\r\n                    <Link to=\"/addPatient\">Add Patient</Link>\r\n                    <Link to=\"/allPatients\">All Patients</Link>\r\n                    <Link to=\"/detailsPatient/01\">Patient Details</Link>\r\n                    <Link to=\"/editPatient/01\">Edit Patient</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={showAppointmentsDrawer} className={isShowAppointmentsDrawer ? \"sidebar__itemIcon sidebar__itemIconBg\" : \"sidebar__itemIcon\"}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <CreateOutlined /> <span> Appointments </span>\r\n                    </div>\r\n                    <span> {isShowAppointmentsDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={isShowAppointmentsDrawer ? \"sidebar__itemDrawer sidebar__itemDrawerShow\" : \"sidebar__itemDrawer\"}>\r\n                    <Link to=\"/addAppoinment\">Add Appointment</Link>\r\n                    <Link to=\"/allAppoinments\">All Appointments</Link>\r\n                    <Link to=\"/detailsAppoinment/01\">Appointment Details</Link>\r\n                    <Link to=\"/editAppoinment/01\">Edit Appointment</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={showRoomAllotmentsDrawer} className={isShowRoomAllotmentsDrawer ? \"sidebar__itemIcon sidebar__itemIconBg\" : \"sidebar__itemIcon\"}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <LockOpenOutlined /> <span> Room Allotments </span>\r\n                    </div>\r\n                    <span> {isShowRoomAllotmentsDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={isShowRoomAllotmentsDrawer ? \"sidebar__itemDrawer sidebar__itemDrawerShow\" : \"sidebar__itemDrawer\"}>\r\n                    <Link to=\"/addRoomAllotment\">Add Room Allotment</Link>\r\n                    <Link to=\"/allRooms\">All Rooms</Link>\r\n                    <Link to=\"/addRoom\">Add Room</Link>\r\n                    <Link to=\"/editRoomAllotment/01\">Edit Room Allotment</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={showPaymentsDrawer} className={isShowPaymentsDrawer ? \"sidebar__itemIcon sidebar__itemIconBg\" : \"sidebar__itemIcon\"}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <AttachMoneyOutlined /> <span> Payments </span>\r\n                    </div>\r\n                    <span> {isShowPaymentsDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={isShowPaymentsDrawer ? \"sidebar__itemDrawer sidebar__itemDrawerShow\" : \"sidebar__itemDrawer\"}>\r\n                    <Link to=\"#\">Add Payment</Link>\r\n                    <Link to=\"#\">All Payments</Link>\r\n                    <Link to=\"#\">Payment Invoice</Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__contacts\">\r\n                <div className=\"sidebar__contactsHeading\">\r\n                    <QuestionAnswerOutlined /> Need Help\r\n                </div>\r\n                <div className=\"sidebar__contactsItem\">\r\n                    <PhoneIphoneOutlined /> +880 {\" \"} 16846 {\" \"} 80383\r\n                </div>\r\n                <div className=\"sidebar__contactsItem\">\r\n                    <EmailOutlined /> mdriaz9587@gmail.com\r\n                </div>\r\n                <div className=\"sidebar__contactsItem\">\r\n                    Copy Rights &copy; 2020\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport './TopBar.css'\r\nimport { \r\n         LocalHospitalOutlined,\r\n         MenuOutlined, \r\n         SearchOutlined, \r\n         PersonOutlineOutlined,\r\n         FullscreenOutlined,\r\n         NotificationsOutlined\r\n        } from '@material-ui/icons';\r\n\r\n          \r\nfunction TopBar() {\r\n    return (\r\n        <div className=\"topbar\">\r\n            <div className=\"topbar__logo\">\r\n                <LocalHospitalOutlined/> HMS \r\n            </div>\r\n            <div className=\"topbar__icons\">\r\n                <MenuOutlined className=\"topbar__iconsBurgerIcon\"/>\r\n                <FullscreenOutlined/>\r\n                <SearchOutlined/>\r\n                <NotificationsOutlined/>\r\n                <PersonOutlineOutlined/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react';\r\nimport './Headline.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined } from '@material-ui/icons';\r\n\r\nfunction Headline({headline, title}) {\r\n    return (\r\n        <div className=\"headline\">\r\n            <div className=\"headline__left\">\r\n                {headline}\r\n            </div>\r\n            <div className=\"headline__right\">\r\n                <Link to=\"/\"><HomeOutlined/></Link>&nbsp;&nbsp;/&nbsp;&nbsp;{title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Headline;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card, Typography} from '@material-ui/core';\r\nimport {Line, Bar, Doughnut} from 'react-chartjs-2';\r\n\r\n//Line Chart\r\nexport function LineChart() {\r\n    const [lineChartData, setLineChartData] = useState({})\r\n    useEffect(() => {\r\n        const chart = () => {\r\n            setLineChartData({\r\n                labels: [2014, 2015, 2016, 2017, 2018, 2019, 2020],\r\n                datasets: [\r\n                    {\r\n                        label: \"Appointments\",\r\n                        data: [400, 500, 650, 800, 700, 800, 900],\r\n                        borderColor: \"#E57498\",\r\n                        backgroundColor: \"rgb(0, 0, 0, 0)\",\r\n                        hoverBackgroundColor: \"#E986a5\",\r\n                        borderWidth: 2\r\n                    }\r\n                ],\r\n            })\r\n        }\r\n        chart()\r\n    },[])\r\n\r\n    return (\r\n            <Card>\r\n                <Line height={350} data={lineChartData} options={\r\n                    {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title:{\r\n                            display: true,\r\n                            text:'Appointments Year by Year',\r\n                            fontSize:25,\r\n                        \r\n                            // position: 'left'\r\n                            fontColor: '#E57498',\r\n                            fontStyle: 400,\r\n                            \r\n                          },\r\n                        legend:{\r\n                            display: false,\r\n                            // position: 'right',\r\n                            // lebel: {\r\n                            //     fontColor: \"red\"\r\n                            // }\r\n                        },\r\n                        \r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        autoSkip: true,\r\n                                        maxTicksLimit: 8,\r\n                                        beginAtZero: true,\r\n                                        // fontColor: \"black\"\r\n                                    },\r\n                                    minor: {\r\n                                        // fontColor: \"black\"\r\n                        \r\n                                    },\r\n                                    gridLines: {\r\n                                        display: true,\r\n                                        lineWidth: .5\r\n                                    },\r\n                                    // stacked: true\r\n                                } \r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                    gridLines: {\r\n                                        display: false\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        layout: {\r\n                            padding: {\r\n                                top: 20,\r\n                                left: 20,\r\n                                right: 20,\r\n                                bottom: 20\r\n                            }\r\n                        },\r\n                        // tooltips: {\r\n                        //     enabled: true\r\n                        // }\r\n                    }}/>\r\n            </Card>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Bar Chart\r\nexport function BarChart() {\r\n    const [barChartData, setBarChartData] = useState({})\r\n    useEffect(() => {\r\n        const chart = () => {\r\n            setBarChartData({\r\n                labels: [2014, 2015, 2016, 2017, 2018, 2019, 2020],\r\n                datasets: [\r\n                    {\r\n                        label: \"Appointments\",\r\n                        data: [400, 500, 650, 800, 700, 800, 900],\r\n                        borderColor: \"#f9813a\",\r\n                        backgroundColor: \"#f9813a\",\r\n                        hoverBackgroundColor: \"#E986a5\",\r\n                        borderWidth: 2\r\n                    }\r\n                ],\r\n                \r\n            })\r\n        }\r\n        chart()\r\n    },[])\r\n\r\n    return (\r\n            <Card>\r\n                <Bar height={350} data={barChartData} options={\r\n                    {   \r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title:{\r\n                            display: true,\r\n                            text:'Patients Year by Year',\r\n                            fontSize:25,\r\n                            align: 'start',\r\n                            // position: 'left',\r\n                            fontColor: '#E57498',\r\n                            fontStyle: 400,\r\n                          },\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        autoSkip: true,\r\n                                        maxTicksLimit: 8,\r\n                                        beginAtZero: true,\r\n                                        // fontColor: \"black\"\r\n                                    },\r\n                                    minor: {\r\n                                        // fontColor: \"black\"\r\n                        \r\n                                    },\r\n                                    gridLines: {\r\n                                        display: true,\r\n                                        lineWidth: .5\r\n                                    },\r\n                                    // stacked: true\r\n                                } \r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                    gridLines: {\r\n                                        display: false\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        layout: {\r\n                            padding: {\r\n                                top: 20,\r\n                                left: 20,\r\n                                right: 20,\r\n                                bottom: 20\r\n                            }\r\n                        },\r\n                        legend:{\r\n                            display: false,\r\n                            // position: 'right',\r\n                            // lebel: {\r\n                            //     fontColor: \"red\"\r\n                            // }\r\n                        }\r\n                }}/>\r\n            </Card>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n//Pie Chart\r\nexport function PieChart() {\r\n    const [pieChartData, setPieChartData] = useState({})\r\n    useEffect(() => {\r\n        const chart = () => {\r\n            setPieChartData({\r\n                labels: ['Completed', 'Canceled', 'Pending'],\r\n                datasets: [\r\n                    {\r\n                        label: \"Patients Year by Year\",\r\n                        data: [400, 500, 650],\r\n                        // borderColor: \"#f9813a\",\r\n                        backgroundColor: [\"#519872\", \"#f05454\", \"#f9813a\"],\r\n                        // hoverBackgroundColor: \"#E986a5\",\r\n                    }\r\n                ],\r\n                \r\n            })\r\n        }\r\n        chart()\r\n    },[])\r\n\r\n    return (\r\n            <Card>\r\n                <Doughnut height={300} data={pieChartData} options={\r\n                    {   \r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title:{\r\n                            display: true,\r\n                            text:'Patients Year by Year',\r\n                            fontSize:25,\r\n                            // position: 'left'\r\n                            fontColor: '#E57498',\r\n                            fontStyle: 400,\r\n                            \r\n\r\n                        \r\n                          },\r\n                        layout: {\r\n                            padding: {\r\n                                top: 10,\r\n                                left: 20,\r\n                                right: 20,\r\n                                bottom: 20\r\n                            }\r\n                        },\r\n                        legend:{\r\n                            display: false,\r\n                            // position: 'right',\r\n                            // lebel: {\r\n                            //     fontColor: \"red\"\r\n                            // }\r\n                        }\r\n                    }}/>\r\n            </Card>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Chip } from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: \"#cfebdc\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(firstRow, secondRow, thirdRow, fourthRow, fifthRow) {\r\n  return { firstRow, secondRow, thirdRow, fourthRow, fifthRow };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 'Dental', '12/10/2020', '12:20pm', <Chip size='small' label=\"completed\" color='primary' />),\r\n  createData('Ice cream sandwich', 'Dental', '12/10/2020', '12:20pm', <Chip size='small' label={'pending'}color=\"error\" />),\r\n  createData('Eclair', 'Dental', '12/10/2020', '12:20pm', <Chip size='small' label={'cancel'}color=\"secondary\" />),\r\n  createData('Cupcake', 'Dental', '12/10/2020', '12:20pm', <Chip size='small' label={'completed'}color=\"primary\" />),\r\n  createData('Gingerbread', 'Dental', '12/10/2020', '12:20pm', <Chip size='small' label={'cancel'}color=\"secondary\" />)\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 800,\r\n  },\r\n});\r\n\r\nexport function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Patient Name</StyledTableCell>\r\n            <StyledTableCell>Doctor</StyledTableCell>\r\n            <StyledTableCell>Check-Up</StyledTableCell>\r\n            <StyledTableCell>Date</StyledTableCell>\r\n            <StyledTableCell>Time</StyledTableCell>\r\n            <StyledTableCell>Status</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.firstRow}>\r\n              <StyledTableCell>{row.firstRow}</StyledTableCell>\r\n              <StyledTableCell>{row.firstRow}</StyledTableCell>\r\n              <StyledTableCell>{row.secondRow}</StyledTableCell>\r\n              <StyledTableCell>{row.thirdRow}</StyledTableCell>\r\n              <StyledTableCell>{row.fourthRow}</StyledTableCell>\r\n              <StyledTableCell>{row.fifthRow}</StyledTableCell>\r\n              \r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './Dashboard.css'\r\nimport Headline from './Headline'\r\nimport {LineChart, BarChart, PieChart} from './Chart'\r\nimport {CustomizedTables} from './Table'\r\nimport {AccessibleOutlined, ExpandMoreOutlined, ExpandLessOutlined, AttachMoneyOutlined, BarChartOutlined} from '@material-ui/icons';\r\nimport {Card, Chip, Typography} from '@material-ui/core';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Headline headline=\"Quick Statistics\" title=\"Dashboard\"/>\r\n            <div className=\"dashboard__body\">\r\n                <div className=\"dashboard__bodyFirstRow\">\r\n                    <Card>\r\n                        <div className=\"dashboard__bodyFirstRowLogo\">\r\n                            <AccessibleOutlined/>\r\n                        </div>\r\n                        <div className=\"dashboard__bodyFirstRowContent\">\r\n                            <Typography variant=\"caption\">Patients</Typography>\r\n                            <Typography variant=\"h4\">318</Typography>\r\n                            <Typography variant=\"caption\"><ExpandLessOutlined/> +20% increased </Typography>\r\n                        </div>\r\n                    </Card>\r\n                    <Card>\r\n                        <div className=\"dashboard__bodyFirstRowLogo\">\r\n                            <BarChartOutlined/>\r\n                        </div>\r\n                        <div className=\"dashboard__bodyFirstRowContent\">\r\n                            <Typography variant=\"caption\">Appointments</Typography>\r\n                            <Typography variant=\"h4\">54584</Typography>\r\n                            <Typography variant=\"caption\"><ExpandMoreOutlined/> -20% decreased </Typography>\r\n                        </div>\r\n                    </Card>\r\n                    <Card>\r\n                        <div className=\"dashboard__bodyFirstRowLogo\">\r\n                            <AttachMoneyOutlined/>\r\n                        </div>\r\n                        <div className=\"dashboard__bodyFirstRowContent\">\r\n                            <Typography variant=\"caption\">Total Revenue</Typography>\r\n                            <Typography variant=\"h4\">318</Typography>\r\n                            <Typography variant=\"caption\"><ExpandLessOutlined/> +20% increased </Typography>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"dashboard__bodySecondRow\">\r\n                    <LineChart/>\r\n                    <BarChart/>\r\n                </div>\r\n\r\n                <Card className=\"dashboard__bodyThirdRow\">\r\n                    <div style={{color: \"#E57498\", padding: 20, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                        <Typography variant=\"h5\">Appointments</Typography>\r\n                    </div>\r\n                    <div className='dashboard__bodyThirdRowTable'>\r\n                        <CustomizedTables />\r\n                    </div>\r\n                </Card>\r\n\r\n                <div className=\"dashboard__bodyFourthRow\">\r\n                    <PieChart/>\r\n                    <Card>\r\n                        <div style={{color: \"#E57498\", padding: 20, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                            <Typography variant=\"h5\">Doctors Availability</Typography>\r\n                        </div>\r\n                        <div className=\"dashboard__bodyFourthRowTableScroll\">\r\n                           <table className=\"dashboard__bodyFourthRowTable\">\r\n                            <tr>\r\n                                    <td>Doctor</td>\r\n                                    <td>Speciality</td>\r\n                                    <td>Status</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td><Chip size='small' label={'unavailable'}color=\"secondary\" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td><Chip size='small' label={'onleave'}color=\"\" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td> <Chip size='small' label={'available'}color=\"primary\" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td> <Chip size='small' label={'available'}color=\"primary\" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td> <Chip size='small' label={'available'}color=\"primary\" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Rajesh</td>\r\n                                    <td>HertSpecialist</td>\r\n                                    <td> <Chip size='small' label={'available'}color=\"primary\" /></td>\r\n                                </tr>\r\n                         \r\n                           </table>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react'\r\nimport './AddDoctor.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction AddDoctor() {  \r\n    const [doctorName, setDoctorName] = useState('Riaz')\r\n    const [specialization, setSpecialization] = useState('medicine')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [doctorDetails, setDoctorDetails] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [experience, setExperience] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [gender, setGender] = useState('male')\r\n    const [address, setAddress] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [profilePic, setProfilePic] = useState('')\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    return (\r\n        <div className=\"addDoctor\">\r\n            <Headline headline=\"Add Doctor\" title='Add Doctor'/>\r\n            <Card className=\"addDoctor__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Doctor</Typography>\r\n                </div>\r\n                <form className=\"addDoctor__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"addDoctor__bodyFormFirstRow\">\r\n                        <div className=\"addDoctor__bodyFormFirstRowLeft\">\r\n                            <TextField required placeholder=\"John Doe\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField select \r\n                                label=\"Specialization\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setSpecialization(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='medicine'>Medicine</option>\r\n                                    <option  value='heart'>Heart</option>\r\n                                    <option  value='neuro'>Neuro</option>\r\n                                    <option  value='brain'>Brain</option>\r\n                            </TextField>\r\n                            <TextField type=\"number\" placeholder=\"36\" label=\"Age\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAge(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField error={false} helperText={true ? null : \"Wrong email pattern\"} type=\"email\" placeholder=\"johndoe@gmail.com\" label=\"Email\" InputLabelProps={{ shrink: true }} onChange={(e) => {setEmail(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField placeholder=\"M.B.B.S from Uk Isternford Medical College...\" label=\"Doctor Details\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorDetails(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"addDoctor__bodyFormFirstRowRight\">\r\n                            <TextField type=\"date\" label=\"Birth Year\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDateOfBirth(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField placeholder=\"5\" label=\"Experience (in year)\" InputLabelProps={{ shrink: true }} onChange={(e) => {setExperience(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField required placeholder=\"01684xxxxxx\" label=\"Phone\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPhone(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField select \r\n                                label=\"Gender\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='male'>Male</option>\r\n                                    <option  value='Female'>Female</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"Rahmat Vhaban/0299-00, Islampur, Cumilla\" label=\"Address\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAddress(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addDoctor__bodyFormSecondRow\">\r\n\r\n                        <TextField label=\"Upload profile pic\" InputLabelProps={{ shrink: true }} type=\"file\" onChange={(e) => {setProfilePic(e.target.value)}} variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"addDoctor__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add Doctor\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDoctor\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Button, ButtonGroup, Chip, IconButton, TextField, Tooltip } from '@material-ui/core';\r\nimport { AssessmentOutlined, AssignmentOutlined, DeleteOutlined, Edit, GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Doctor Id' },\r\n  { id: 'doctorName', numeric: true, disablePadding: false, label: 'Doctor Name' },\r\n  { id: 'phone', numeric: true, disablePadding: false, label: 'Phone' },\r\n  { id: 'specialization', numeric: true, disablePadding: false, label: 'Specialization' },\r\n  { id: 'experience', numeric: true, disablePadding: false, label: 'Experience(in years)' },\r\n  { id: 'availability', numeric: true, disablePadding: false, label: 'Availability' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Doctors\r\n        </Typography>\r\n      )}\r\n        {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const componentRef = React.useRef();\r\n\r\n  function createData(name, doctorName, phone, specialization, experience, availability) {\r\n    return { name, doctorName, phone, specialization, experience, availability };\r\n  }\r\n  const rows = [\r\n    createData(1, 'Ahmed Ullah', '+88012458965', 'Medicine', 5, <Chip size='small' label=\"available\" color='primary' />),\r\n    createData(2, 'Zahid Ullah', '+88012458965', 'Medicine', 6, <Chip size='small' label=\"unavailable\" color='secondary' />),\r\n    createData(3, 'Shakir Ullah', '+88012458965', 'Medicine', 3, <Chip size='small' label=\"onleave\" color='default' />),\r\n  ];\r\n\r\n  const printAction = useReactToPrint({\r\n    content: () => componentRef.current\r\n  })\r\n\r\n  const handleAlert = (e) => {\r\n    e.preventDefault()\r\n    setAlert(!alert)\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.paper}>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <div style={{flex: 0.9}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Select a doctor please!</Alert> : null}\r\n            </div>\r\n            <TextField\r\n            label=\"Search Doctor\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n        </div>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer ref={componentRef}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.doctorName}</TableCell>\r\n                      <TableCell align=\"right\">{row.phone}</TableCell>\r\n                      <TableCell align=\"right\">{row.specialization}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">{row.availability}</TableCell>\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    <div className=\"megatable__print\">\r\n      <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n          <Button onClick={printAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n          <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n          <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    <div className=\"megatable__ActionButtons\" style={{marginTop: 20}}>\r\n    {\r\n        selected.length != 0 ?\r\n      <Link to={`detailsDoctor/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            startIcon={<AssignmentOutlined />}\r\n          >\r\n            Details\r\n          </Button>\r\n      </Link> : \r\n       <Button\r\n         size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n         onClick={handleAlert}\r\n         variant=\"contained\"\r\n         color=\"default\"\r\n         startIcon={<AssignmentOutlined />}\r\n         >\r\n         Details\r\n     </Button>\r\n      }\r\n      {\r\n        selected.length != 0 ?\r\n          <Link to={`editDoctor/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Link> : \r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              onClick={handleAlert}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              >\r\n              Edit\r\n          </Button>\r\n      }\r\n      {\r\n      selected.length != 0 ?\r\n        <Link to={`deleteDoctor/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            style={{marginLeft: 10}}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteOutlined />}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Link> : \r\n        <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            onClick={handleAlert}\r\n            style={{marginLeft: 10}}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteOutlined />}\r\n            >\r\n            Delete\r\n        </Button>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Card, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Headline from '../Headline'\r\nimport MegaTable from './MegaTable'\r\nimport './AllDoctors.css'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\n\r\nfunction AllDoctors() {\r\n    return (\r\n        <div className=\"allDoctors\">\r\n            <Headline headline=\"All Doctors\" title='All Doctors'/>\r\n            <Card className=\"allDoctors__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">All Doctors</Typography>\r\n                </div>\r\n                <div className=\"allDoctors__bodyTable\">\r\n                    <MegaTable/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllDoctors\r\n","import React, { useState } from 'react'\r\nimport './EditDoctor.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControlLabel, TextField, Typography } from '@material-ui/core'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nfunction EditDoctor() {  \r\n    const [doctorName, setDoctorName] = useState('Riaz')\r\n    const [specialization, setSpecialization] = useState('medicine')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [doctorDetails, setDoctorDetails] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [experience, setExperience] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [gender, setGender] = useState('male')\r\n    const [address, setAddress] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [profilePic, setProfilePic] = useState('')\r\n    let {doctorId} = useParams()\r\n\r\n\r\nconsole.log(doctorId)\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    return (\r\n        <div className=\"editDoctor\">\r\n            <Headline headline=\"Edit Doctor\" title='Edit Doctor'/>\r\n            <Card className=\"editDoctor__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Doctor</Typography>\r\n                </div>\r\n                <form className=\"editDoctor__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"editDoctor__bodyFormFirstRow\">\r\n                        <div className=\"editDoctor__bodyFormFirstRowLeft\">\r\n                            <TextField required value=\"John Doe\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField select \r\n                                label=\"Specialization\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setSpecialization(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='medicine'>Medicine</option>\r\n                                    <option  value='heart'>Heart</option>\r\n                                    <option  value='neuro'>Neuro</option>\r\n                                    <option  value='brain'>Brain</option>\r\n                            </TextField>\r\n                            <TextField type=\"number\" value=\"36\" label=\"Age\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAge(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField error={false} helperText={true ? null : \"Wrong email pattern\"} type=\"email\" value=\"johndoe@gmail.com\" label=\"Email\" InputLabelProps={{ shrink: true }} onChange={(e) => {setEmail(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField value=\"M.B.B.S from Uk Isternford Medical College...\" label=\"Doctor Details\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorDetails(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"editDoctor__bodyFormFirstRowRight\">\r\n                            <TextField type=\"date\" label=\"Birth Year\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDateOfBirth(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField value=\"5\" label=\"Experience (in year)\" InputLabelProps={{ shrink: true }} onChange={(e) => {setExperience(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField required value=\"01684xxxxxx\" label=\"Phone\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPhone(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField \r\n                                select \r\n                                label=\"Gender\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option value='male'>Male</option>\r\n                                    <option value='Female'>Female</option>\r\n                            </TextField>\r\n                            <TextField value=\"Rahmat Vhaban/0299-00, Islampur, Cumilla\" label=\"Address\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAddress(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editDoctor__bodyFormSecondRow\">\r\n                        <TextField label=\"Upload profile pic\" InputLabelProps={{ shrink: true }} type=\"file\" onChange={(e) => {setProfilePic(e.target.value)}} variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"editDoctor__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Edit Doctor\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDoctor\r\n","import { Button, ButtonGroup, Card, CardActionArea, CardActions, CardContent, CardMedia, Chip, Typography } from '@material-ui/core'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport Headline from '../Headline'\r\nimport './DetailsDoctor.css'\r\n\r\nfunction DetailsDoctor() {\r\n    let {doctorId} = useParams()\r\n    const doctorDetailsRef = React.useRef()\r\n    const doctorActivityRef = React.useRef()\r\n\r\n\r\n\r\n    const doctorDetailsPrintAction = useReactToPrint({\r\n    content: () => doctorDetailsRef.current\r\n    })\r\n    const doctorActivityPrintAction = useReactToPrint({\r\n    content: () => doctorActivityRef.current\r\n    })   \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"detailsDoctor\">\r\n            <Headline headline=\"Doctor Details\" title='Doctor Details'/>\r\n            <Card className=\"ditailsDoctor__firstRow\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Doctor Details</Typography>\r\n                </div>\r\n                <div className=\"ditailsDoctor__firstRowBody\">\r\n                    <div className=\"ditailsDoctor__firstRowBodyLeft\">\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                            component = 'img'\r\n                            // height = '140'\r\n                            image=\"https://picsum.photos/400/300\"\r\n                            title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Doctor Name\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                across all continents except Antarctica\r\n                            </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Link to={`/editDoctor/${doctorId}`}>\r\n                                <Button size=\"small\" color=\"default\" variant=\"contained\">\r\n                                    Edit\r\n                                </Button>\r\n                            </Link>\r\n                            <Button size=\"small\" color=\"secondary\" variant=\"contained\">\r\n                                Delete\r\n                            </Button>\r\n                        </CardActions>\r\n                    </div>\r\n                    <div className=\"detailsDoctor__firstRowBodyRight\">\r\n                        <div className=\"detailsDoctor__firstRowBodyRightTableScroll\">\r\n                            <table className=\"detailsDoctor__firstRowBodyRightTable\">\r\n                                <tr>\r\n                                    <td>Specialization</td>\r\n                                    <td>General Physician</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Experience</td>\r\n                                    <td>8 years</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Gender</td>\r\n                                    <td>Male</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Address</td>\r\n                                    <td>299/272 Kaptan Bazar, Cumilla. Bangladesh</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Phone</td>\r\n                                    <td>016846803xx</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Date of Birth</td>\r\n                                    <td>12-10-2020</td>\r\n                                </tr> <tr>\r\n                                    <td>Email</td>\r\n                                    <td>mdriaz9587@gmail.com</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* print component starts */}\r\n                        <div style={{display: 'none'}}>\r\n                            <div ref={doctorDetailsRef}className=\"detailsDoctor__firstRowBodyRightTableScroll\">\r\n                                <CardActionArea style={{display: 'flex', marginTop: 20}}>\r\n                                    <img\r\n                                        src=\"https://picsum.photos/200/200\"\r\n                                        title=\"Doctor Image\"\r\n                                    />\r\n                                    <CardContent style={{width: 300, marginLeft: 20}}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Doctor Name\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                            across all continents except Antarctica\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <table style={{marginTop: 20}} className=\"detailsDoctor__firstRowBodyRightTable\">\r\n                                    <tr>\r\n                                        <td>Specialization</td>\r\n                                        <td>General Physician</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Experience</td>\r\n                                        <td>8 years</td>\r\n                                    </tr> \r\n                                    <tr>\r\n                                        <td>Gender</td>\r\n                                        <td>Male</td>\r\n                                    </tr> \r\n                                    <tr>\r\n                                        <td>Address</td>\r\n                                        <td>299/272 Kaptan Bazar, Cumilla. Bangladesh</td>\r\n                                    </tr> \r\n                                    <tr>\r\n                                        <td>Phone</td>\r\n                                        <td>016846803xx</td>\r\n                                    </tr> \r\n                                    <tr>\r\n                                        <td>Date of Birth</td>\r\n                                        <td>12-10-2020</td>\r\n                                    </tr> <tr>\r\n                                        <td>Email</td>\r\n                                        <td>mdriaz9587@gmail.com</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        {/* print component ends */}\r\n\r\n\r\n\r\n                        <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                            <Button onClick={doctorDetailsPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                            <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                            <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n            <Card className=\"detailsDoctor__secondRow\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Doctor Activity</Typography>\r\n                </div>\r\n                <div className=\"detailsDoctor__secondRowTableScroll\">\r\n                    <table ref={doctorActivityRef} className=\"detailsDoctor__secondRowTable\">\r\n                        <tr>\r\n                            <td>Patient Name</td>\r\n                            <td>Injury/Condition</td>\r\n                            <td>Visit Date</td>\r\n                            <td>Status</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahmed Abdullah</td>\r\n                            <td>Cold Fever</td>\r\n                            <td>20-10-2020</td>\r\n                            <td><Chip size='small' label={'condition is good'}color=\"primary\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahmed Abdullah</td>\r\n                            <td>Cold Fever</td>\r\n                            <td>20-10-2020</td>\r\n                            <td><Chip size='small' label={'small operation'}color=\"secondary\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahmed Abdullah</td>\r\n                            <td>Cold Fever</td>\r\n                            <td>20-10-2020</td>\r\n                            <td><Chip size='small' label={'condition is good'}color=\"primary\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahmed Abdullah</td>\r\n                            <td>Cold Fever</td>\r\n                            <td>20-10-2020</td>\r\n                            <td><Chip size='small' label={'condition is good'}color=\"primary\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahmed Abdullah</td>\r\n                            <td>Cold Fever</td>\r\n                            <td>20-10-2020</td>\r\n                            <td><Chip size='small' label={'condition is good'}color=\"primary\" /></td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                    <Button onClick={doctorActivityPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                    <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                    <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                </ButtonGroup>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsDoctor\r\n","import React, { useState } from 'react'\r\nimport './AddPatient.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction AddPatient() {  \r\n    const [patientName, setPatientName] = useState('Riaz')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [gender, setGender] = useState('male')\r\n    const [address, setAddress] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [profilePic, setProfilePic] = useState('')\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"addPatient\">\r\n            <Headline headline=\"Add Patient\" title='Add Patient'/>\r\n            <Card className=\"addPatient__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Patient</Typography>\r\n                </div>\r\n                <form className=\"addPatient__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"addPatient__bodyFormFirstRow\">\r\n                        <div className=\"addPatient__bodyFormFirstRowLeft\">\r\n                            <TextField required placeholder=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField type=\"number\" placeholder=\"36\" label=\"Age\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAge(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required placeholder=\"01684xxxxxx\" label=\"Phone\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPhone(e.target.value)}} variant=\"outlined\"/>\r\n\r\n                        </div>\r\n                        <div className=\"addPatient__bodyFormFirstRowRight\">\r\n                            <TextField type=\"date\" label=\"Birth Year\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDateOfBirth(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField error={false} helperText={true ? null : \"Wrong email pattern\"} type=\"email\" placeholder=\"johndoe@gmail.com\" label=\"Email\" InputLabelProps={{ shrink: true }} onChange={(e) => {setEmail(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField select \r\n                                label=\"Gender\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='male'>Male</option>\r\n                                    <option  value='Female'>Female</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"Rahmat Vhaban/0299-00, Islampur, Cumilla\" label=\"Address\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAddress(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addPatient__bodyFormSecondRow\">\r\n                        <TextField label=\"Upload profile pic\" InputLabelProps={{ shrink: true }} type=\"file\" onChange={(e) => {setProfilePic(e.target.value)}} variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"addPatient__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add Patient\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPatient\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Button, ButtonGroup, Chip, IconButton, TextField, Tooltip } from '@material-ui/core';\r\nimport { AssessmentOutlined, AssignmentOutlined, DeleteOutlined, Edit, GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Patient Id' },\r\n  { id: 'doctorName', numeric: true, disablePadding: false, label: 'Patient Name' },\r\n  { id: 'phone', numeric: true, disablePadding: false, label: 'Phone' },\r\n  { id: 'age', numeric: true, disablePadding: false, label: 'age' },\r\n  { id: 'lastVisit', numeric: true, disablePadding: false, label: 'Last Visit' },\r\n  { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Patients\r\n        </Typography>\r\n      )}\r\n        {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const componentRef = React.useRef();\r\n\r\n  function createData(name, doctorName, phone, specialization, experience, availability) {\r\n    return { name, doctorName, phone, specialization, experience, availability };\r\n  }\r\n  const rows = [\r\n    createData(1, 'Ahmed Ullah', '+88012458965', 55, '22-10-20', <Chip size='small' label=\"completed\" color='primary' />),\r\n    createData(2, 'Zahid Ullah', '+88012458965', 66, '22-10-20', <Chip size='small' label=\"cancelled\" color='secondary' />),\r\n    createData(3, 'Shakir Ullah', '+88012458965', 35, '22-10-20', <Chip size='small' label=\"pending\" color='default' />),\r\n  ];\r\n\r\n  const deleteHandler = (e) => {\r\n    console.log(\"api should be added for delete patient where id = \" + selected[0])\r\n  }\r\n\r\n  const printAction = useReactToPrint({\r\n    content: () => componentRef.current\r\n  })\r\n\r\n  const handleAlert = (e) => {\r\n    e.preventDefault()\r\n    setAlert(!alert)\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <div style={{flex: 0.9}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Select a patient please!</Alert> : null}\r\n            </div>\r\n            <TextField\r\n            label=\"Search Patient\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n        </div>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer ref={componentRef}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.doctorName}</TableCell>\r\n                      <TableCell align=\"right\">{row.phone}</TableCell>\r\n                      <TableCell align=\"right\">{row.specialization}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">{row.availability}</TableCell>\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    <div className=\"megatable__print\">\r\n      <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n          <Button onClick={printAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n          <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n          <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    <div className=\"megatable__ActionButtons\" style={{marginTop: 20}}>\r\n    {\r\n        selected.length != 0 ?\r\n      <Link to={`detailsPatient/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            startIcon={<AssignmentOutlined />}\r\n          >\r\n            Details\r\n          </Button>\r\n      </Link> : \r\n       <Button\r\n         size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n         onClick={handleAlert}\r\n         variant=\"contained\"\r\n         color=\"default\"\r\n         startIcon={<AssignmentOutlined />}\r\n         >\r\n         Details\r\n     </Button>\r\n      }\r\n      {\r\n        selected.length != 0 ?\r\n          <Link to={`editPatient/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Link> : \r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              onClick={handleAlert}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              >\r\n              Edit\r\n          </Button>\r\n      }\r\n      {\r\n      selected.length != 0 ?\r\n        <Button\r\n          size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n          onClick={deleteHandler}\r\n          style={{marginLeft: 10}}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<DeleteOutlined />}\r\n        >\r\n          Delete\r\n        </Button>\r\n        : \r\n        <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            onClick={handleAlert}\r\n            style={{marginLeft: 10}}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteOutlined />}\r\n            >\r\n            Delete\r\n        </Button>\r\n    }\r\n\r\n   \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Card, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Headline from '../Headline'\r\nimport MegaTable from './MegaTable'\r\nimport './AllPatients.css'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\n\r\nfunction AllPatients() {\r\n    return (\r\n        <div className=\"allPatients\">\r\n            <Headline headline=\"All Patients\" title='All Patients'/>\r\n            <Card className=\"allPatients__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">All Patients</Typography>\r\n                </div>\r\n                <div className=\"allPatients__bodyTable\">\r\n                    <MegaTable/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPatients\r\n","import React, { useState } from 'react'\r\nimport './EditPatient.css'\r\nimport Headline from '../Headline'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction EditPatient() {  \r\n    const [patientName, setPatientName] = useState('Riaz')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [gender, setGender] = useState('male')\r\n    const [address, setAddress] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [profilePic, setProfilePic] = useState('')\r\n    let {patientId} = useParams()\r\n\r\n    const submit = () => {\r\n        alert('edited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"editPatient\">\r\n            <Headline headline=\"Edit Patient\" title='Edit Patient'/>\r\n            <Card className=\"editPatient__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Edit Patient</Typography>\r\n                </div>\r\n                <form className=\"editPatient__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"editPatient__bodyFormFirstRow\">\r\n                        <div className=\"editPatient__bodyFormFirstRowLeft\">\r\n                            <TextField required value=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField type=\"number\" value=\"36\" label=\"Age\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAge(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required value=\"01684xxxxxx\" label=\"Phone\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPhone(e.target.value)}} variant=\"outlined\"/>\r\n\r\n                        </div>\r\n                        <div className=\"editPatient__bodyFormFirstRowRight\">\r\n                            <TextField type=\"date\" label=\"Birth Year\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDateOfBirth(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField error={false} helperText={true ? null : \"Wrong email pattern\"} type=\"email\" value=\"johndoe@gmail.com\" label=\"Email\" InputLabelProps={{ shrink: true }} onChange={(e) => {setEmail(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField select \r\n                                label=\"Gender\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='male'>Male</option>\r\n                                    <option  value='Female'>Female</option>\r\n                            </TextField>\r\n                            <TextField value=\"Rahmat Vhaban/0299-00, Islampur, Cumilla\" label=\"Address\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAddress(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editPatient__bodyFormSecondRow\">\r\n                        <TextField label=\"Upload profile pic\" InputLabelProps={{ shrink: true }} type=\"file\" onChange={(e) => {setProfilePic(e.target.value)}} variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"editPatient__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Edit Patient\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPatient\r\n","import { Button, ButtonGroup, Card, CardActionArea, CardActions, CardContent, CardMedia, Chip, Typography } from '@material-ui/core'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport Headline from '../Headline'\r\nimport './DetailsPatient.css'\r\n\r\nfunction DetailsPatient() {\r\n    let {patientId} = useParams()\r\n    const patientDetailsRef = React.useRef()\r\n    const patientVisitsRef = React.useRef()\r\n    const patientPaymentRef = React.useRef()\r\n\r\n\r\n    const patientDetailsPrintAction = useReactToPrint({\r\n    content: () => patientDetailsRef.current\r\n    })\r\n    const patientVisitsPrintAction = useReactToPrint({\r\n    content: () => patientVisitsRef.current\r\n    })   \r\n    const patientPaymentPrintAction = useReactToPrint({\r\n    content: () => patientPaymentRef.current\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"detailsPatient\">\r\n            <Headline headline=\"Patient Details\" title='Patient Details'/>\r\n\r\n            <div className=\"detailsPatient__firstRow\">\r\n                <Card className=\"detailsPatient__firstRowBodyLeft\">\r\n                    <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                        <Typography variant=\"h5\">Patient Details</Typography>\r\n                    </div>\r\n                    <div className=\"detailsPatient__firstRowBodyLeftTableScroll\">\r\n                        <table ref={patientDetailsRef} className=\"detailsPatient__firstRowBodyLeftTable\">\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>Amin Zahid</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Age</td>\r\n                            <td>38 years</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>Male</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Phone</td>\r\n                            <td>016846803xx</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Email</td>\r\n                            <td>mdriaz9587@gmail.com</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Date of Birth</td>\r\n                            <td>12-10-1990</td>\r\n                        </tr> <tr>\r\n                            <td>address</td>\r\n                            <td>299/272 Kaptan Bazar, Cumilla. Bangladesh</td>\r\n                        </tr>\r\n                        </table>\r\n                    </div>\r\n                    <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                        <Button onClick={patientDetailsPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                        <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                        <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                    </ButtonGroup>\r\n                    <CardActions style={{marginTop: 10, paddingLeft: 0}}>\r\n                        <Link to={`/editPatient/${patientId}`}>\r\n                        <Button size=\"small\" color=\"default\" variant=\"contained\">\r\n                            Edit\r\n                        </Button>\r\n                        </Link>\r\n                        <Button size=\"small\" color=\"secondary\" variant=\"contained\">\r\n                            Delete\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n                <Card className=\"detailsPatient__firstRowBodyRight\">\r\n                    <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                        <Typography variant=\"h5\">Patient Visits</Typography>\r\n                    </div>\r\n                    <div className=\"detailsPatient__firstRowBodyRightTableScroll\">\r\n                       <table ref={patientVisitsRef} className=\"detailsPatient__firstRowBodyRightTable\">\r\n                        <tr>\r\n                            <td>Doctor Name</td>\r\n                            <td>Cost</td>\r\n                            <td>Visit Date</td>\r\n                            <td>Status</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahamed Karim</td>\r\n                            <td>3000 tk</td>\r\n                            <td>20-03-2020</td>\r\n                            <td>Resheduled</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ahamed Karim</td>\r\n                            <td>3000 tk</td>\r\n                            <td>20-03-2020</td>\r\n                            <td>Fever</td>\r\n                        </tr>        \r\n                        <tr>\r\n                            <td>Ahamed Karim</td>\r\n                            <td>3000 tk</td>\r\n                            <td>20-03-2020</td>\r\n                            <td>Injury</td>\r\n                        </tr>\r\n                       </table> \r\n                    </div>\r\n                    <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                        <Button onClick={patientVisitsPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                        <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                        <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                    </ButtonGroup>\r\n                </Card>\r\n            </div>\r\n\r\n            <Card className=\"detailsPatient__secondRow\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Patient Payment Transactions</Typography>\r\n                </div>\r\n                <div className=\"detailsPatient__secondRowTableScroll\">\r\n                  <table ref={patientPaymentRef} className=\"detailsPatient__secondRowTable\"> \r\n                    <tr>\r\n                        <td>Date</td>\r\n                        <td>Cost</td>\r\n                        <td>Discount</td>\r\n                        <td>Payment Type</td>\r\n                        <td>Invoice</td>\r\n                        <td>Status</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>20-10-2020</td>\r\n                        <td>5000 tk</td>\r\n                        <td>15%</td>\r\n                        <td>Check</td>\r\n                        <td> \r\n                            <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<GetAppOutlined />}\r\n                            >\r\n                            Invoice\r\n                            </Button>\r\n                        </td>\r\n                        <td><Chip size='small' label={'completed'}color=\"primary\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>20-10-2020</td>\r\n                        <td>5000 tk</td>\r\n                        <td>15%</td>\r\n                        <td>Credit Card</td>\r\n                        <td> \r\n                            <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<GetAppOutlined />}\r\n                            >\r\n                            Invoice\r\n                            </Button>\r\n                        </td>\r\n                        <td><Chip size='small' label={'pending'}color=\"default\" /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>20-10-2020</td>\r\n                        <td>5000 tk</td>\r\n                        <td>15%</td>\r\n                        <td>Bkash</td>\r\n                        <td> \r\n                            <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<GetAppOutlined />}\r\n                            >\r\n                            Invoice\r\n                            </Button>\r\n                        </td>\r\n                        <td><Chip size='small' label={'cancelled'}color=\"secondary\" /></td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n                <ButtonGroup style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                    <Button size={window.innerWidth < 768 ? 'small' : 'medium'} onClick={patientPaymentPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                    <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                    <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                </ButtonGroup>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsPatient\r\n","import React, { useState } from 'react'\r\nimport './AddAppoinment.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction AddAppoinment() {  \r\n    const [patientName, setPatientName] = useState('')\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorName, setDoctorName] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n    const [department, setDepartment] = useState('medicine')\r\n\r\n    const [appoinmentDate, setAppoinmentDate] = useState('')\r\n    const [timeSlot, setTimeSlot] = useState('10AM - 11AM')\r\n    const [tokenNumber, setTokenNumber] = useState('')\r\n\r\n    const [problem, setProblem] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n\r\n\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"addAppoinment\">\r\n            <Headline headline=\"Add Appoinment\" title='Add Appoinment'/>\r\n            <Card className=\"addAppoinment__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Appoinment</Typography>\r\n                </div>\r\n                <form className=\"addAppoinment__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"addAppoinment__bodyFormFirstRow\">\r\n                        <div className=\"addAppoinment__bodyFormFirstRowLeft\">\r\n                            <TextField required error={false} helperText={true ? null : \"Wrong email pattern\"} placeholder=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField placeholder=\"PA01\" label=\"Patient Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientId(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required placeholder=\"Abdul Latif\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField placeholder=\"DA01\" label=\"Doctor Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorId(e.target.value)}}  variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"addAppoinment__bodyFormFirstRowRight\">\r\n                            <TextField select \r\n                                label=\"Department\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setDepartment(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='medicine'>Medicine</option>\r\n                                    <option  value='neoro'>Neoro</option>\r\n                                    <option  value='brain'>Brain</option>\r\n                            </TextField>\r\n                            <TextField type=\"date\" label=\"Appoinment Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAppoinmentDate(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField select \r\n                                label=\"Time Slot\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setTimeSlot(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='10AM - 11AM'>10AM - 11AM</option>\r\n                                    <option  value='11AM - 12AM'>11AM - 12AM</option>\r\n                                    <option  value='4PM - 5PM'>4PM - 5PM</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"\" label=\"Token\" InputLabelProps={{ shrink: true }} onChange={(e) => {setTokenNumber(e.target.value)}} variant=\"outlined\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addAppoinment__bodyFormSecondRow\">\r\n                        <TextField label=\"Problem\" InputLabelProps={{ shrink: true }}  onChange={(e) => {setProblem(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"addAppoinment__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add Appoinment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAppoinment\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Button, ButtonGroup, Chip, IconButton, TextField, Tooltip } from '@material-ui/core';\r\nimport { AssessmentOutlined, AssignmentOutlined, DeleteOutlined, Edit, GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'appoimentId', numeric: false, disablePadding: true, label: 'Appoinment Id' },\r\n  { id: 'patientId', numeric: true, disablePadding: false, label: 'Patient Id' },\r\n  { id: 'token', numeric: true, disablePadding: false, label: 'Token' },\r\n  { id: 'doctorName', numeric: true, disablePadding: false, label: 'Doctor Name' },\r\n  { id: 'problem', numeric: true, disablePadding: false, label: 'Problem' },\r\n  { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Appoinments\r\n        </Typography>\r\n      )}\r\n        {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const componentRef = React.useRef();\r\n\r\n  function createData(appoimentId, patientId, token, doctorName, problem, status) {\r\n    return { appoimentId, patientId, token, doctorName, problem, status };\r\n  }\r\n  const rows = [\r\n    createData('AA01', 'PA01', 'TA01', 'John Doe', 'Cold Fever', <Chip size='small' label=\"active\" color='primary' />),\r\n    createData('AA02', 'PA02', 'TA01', 'John Doe', 'Cold Fever', <Chip size='small' label=\"pending\" color='default' />),\r\n    createData('AA03', 'PA03', 'TA01', 'John Doe', 'Cold Fever', <Chip size='small' label=\"active\" color='primary' />),\r\n  ];\r\n\r\n  const printAction = useReactToPrint({\r\n    content: () => componentRef.current\r\n  })\r\n\r\n  const handleAlert = (e) => {\r\n    e.preventDefault()\r\n    setAlert(!alert)\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.appoimentId);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, appoimentId) => {\r\n    const selectedIndex = selected.indexOf(appoimentId);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, appoimentId);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (appoimentId) => selected.indexOf(appoimentId) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.paper}>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <div style={{flex: 0.9}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Select a doctor please!</Alert> : null}\r\n            </div>\r\n            <TextField\r\n            label=\"Search Doctor\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n        </div>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer ref={componentRef}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.appoimentId);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.appoimentId)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.appoimentId}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.appoimentId}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.patientId}</TableCell>\r\n                      <TableCell align=\"right\">{row.token}</TableCell>\r\n                      <TableCell align=\"right\">{row.doctorName}</TableCell>\r\n                      <TableCell align=\"right\">{row.problem}</TableCell>\r\n                      <TableCell align=\"right\">{row.status}</TableCell>\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    <div className=\"megatable__print\">\r\n      <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n          <Button onClick={printAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n          <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n          <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    <div className=\"megatable__ActionButtons\" style={{marginTop: 20}}>\r\n    {\r\n        selected.length != 0 ?\r\n      <Link to={`detailsAppoinment/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            startIcon={<AssignmentOutlined />}\r\n          >\r\n            Details\r\n          </Button>\r\n      </Link> : \r\n       <Button\r\n         size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n         onClick={handleAlert}\r\n         variant=\"contained\"\r\n         color=\"default\"\r\n         startIcon={<AssignmentOutlined />}\r\n         >\r\n         Details\r\n     </Button>\r\n      }\r\n      {\r\n        selected.length != 0 ?\r\n          <Link to={`editAppoinment/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Link> : \r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              onClick={handleAlert}\r\n              style={{marginLeft: 10}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              >\r\n              Edit\r\n          </Button>\r\n      }\r\n      {\r\n      selected.length != 0 ?\r\n        <Link to={`deleteAppoiment/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n          <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            style={{marginLeft: 10}}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteOutlined />}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Link> : \r\n        <Button\r\n            size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n            onClick={handleAlert}\r\n            style={{marginLeft: 10}}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteOutlined />}\r\n            >\r\n            Delete\r\n        </Button>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Card, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Headline from '../Headline'\r\nimport MegaTable from './MegaTable'\r\nimport './AllAppoinments.css'\r\n\r\n\r\nfunction AllAppoinments() {\r\n    return (\r\n        <div className=\"allAppoinments\">\r\n            <Headline headline=\"All Appoinments\" title='All Appoinments'/>\r\n            <Card className=\"allAppoinments__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">All Appoinments</Typography>\r\n                </div>\r\n                <div className=\"allAppoinments__bodyTable\">\r\n                    <MegaTable/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAppoinments\r\n","import React, { useState } from 'react'\r\nimport './EditAppoinment.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction EditAppoinment() {  \r\n    const [patientName, setPatientName] = useState('')\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorName, setDoctorName] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n    const [department, setDepartment] = useState('medicine')\r\n\r\n    const [appoinmentDate, setAppoinmentDate] = useState('')\r\n    const [timeSlot, setTimeSlot] = useState('10AM - 11AM')\r\n    const [tokenNumber, setTokenNumber] = useState('')\r\n\r\n    const [problem, setProblem] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    let {appoinmentId} = useParams()\r\n\r\n\r\n\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"editAppoinment\">\r\n            <Headline headline=\"Edit Appoinment\" title='Edit Appoinment'/>\r\n            <Card className=\"editAppoinment__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Edit Appoinment</Typography>\r\n                </div>\r\n                <form className=\"editAppoinment__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"editAppoinment__bodyFormFirstRow\">\r\n                        <div className=\"editAppoinment__bodyFormFirstRowLeft\">\r\n                            <TextField required error={false} helperText={true ? null : \"Wrong email pattern\"} value=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField value=\"PA01\" label=\"Patient Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientId(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required value=\"Abdul Latif\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField value=\"DA01\" label=\"Doctor Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorId(e.target.value)}}  variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"editAppoinment__bodyFormFirstRowRight\">\r\n                            <TextField select \r\n                                label=\"Department\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setDepartment(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='medicine'>Medicine</option>\r\n                                    <option  value='neoro'>Neoro</option>\r\n                                    <option  value='brain'>Brain</option>\r\n                            </TextField>\r\n                            <TextField type=\"date\" label=\"Appoinment Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAppoinmentDate(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField select\r\n                                value={timeSlot}\r\n                                label=\"Time Slot\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setTimeSlot(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='10AM - 11AM'>10AM - 11AM</option>\r\n                                    <option  value='11AM - 12AM'>11AM - 12AM</option>\r\n                                    <option  value='4PM - 5PM'>4PM - 5PM</option>\r\n                            </TextField>\r\n                            <TextField value=\"TA01\" label=\"Token\" InputLabelProps={{ shrink: true }} onChange={(e) => {setTokenNumber(e.target.value)}} variant=\"outlined\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editAppoinment__bodyFormSecondRow\">\r\n                        <TextField value=\"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ad facilis quidem doloribus quia eaque praesentium ipsum repellendus non recusandae asperiores error\" label=\"Problem\" InputLabelProps={{ shrink: true }}  onChange={(e) => {setProblem(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"editAppoinment__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Edit Appoinment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAppoinment\r\n","import React from 'react'\r\nimport './DetailsAppoinment.css'\r\nimport Headline from '../Headline'\r\nimport { Button, ButtonGroup, Card, CardActions, Typography } from '@material-ui/core'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\n\r\n\r\nfunction DetailsAppoinment() {\r\n    let {appoinmentId} = useParams()\r\n    const detailsAppoinmentRef = React.useRef()\r\n\r\n    const doctorAppoinmentPrintAction = useReactToPrint({\r\n        content: () => detailsAppoinmentRef.current\r\n        })\r\n    return (\r\n        <div className=\"detailsAppoinment\">\r\n            <Headline headline=\"Appoinment Details\" title='Appoinment Details'/>\r\n            <Card className=\"detailsAppoinment__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Appoinment Details</Typography>\r\n                </div>\r\n               \r\n                <div className=\"detailsAppoinment__bodyTableScroll\">\r\n                    <table ref={detailsAppoinmentRef} className=\"detailsAppoinment__bodyTable\">\r\n                        <tr>\r\n                            <td>Patient Id</td>\r\n                            <td>PA01</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Department</td>\r\n                            <td>Cardiology</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Doctor Name</td>\r\n                            <td>Hamid Zahid</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Appoinment Date</td>\r\n                            <td>20-12-2020</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Time Slot</td>\r\n                            <td>10AM - 11AM</td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>Token</td>\r\n                            <td>TA01</td>\r\n                        </tr> <tr>\r\n                            <td>Problem</td>\r\n                            <td>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ad facilis quidem doloribus quia eaque praesentium ipsum repellendus non recusandae asperiores error</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n                    <Button onClick={doctorAppoinmentPrintAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n                    <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n                    <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n                </ButtonGroup>\r\n                <CardActions style={{marginTop: 10, paddingLeft: 0}}>\r\n                    <Link to={`/editAppoinment/${appoinmentId}`}>\r\n                    <Button size=\"small\" color=\"default\" variant=\"contained\">\r\n                        Edit\r\n                    </Button>\r\n                    </Link>\r\n                    <Button size=\"small\" color=\"secondary\" variant=\"contained\">\r\n                        Delete\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsAppoinment\r\n","import React, { useState } from 'react'\r\nimport './AddRoomAllotment.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction AddRoomAllotment() {  \r\n    const [roomNumber, setRoomNumber] = useState('')\r\n    const [patientName, setPatientName] = useState('')\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorName, setDoctorName] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n\r\n    const [roomType, setRoomType] = useState('general')\r\n    const [allotmentDate, setAllotmentDate] = useState('')\r\n    const [dischargeDate, setDishchargeDate] = useState('')\r\n\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"addRoomAllotment\">\r\n            <Headline headline=\"Add Allotment\" title='Add Allotment'/>\r\n            <Card className=\"addRoomAllotment__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Allotment</Typography>\r\n                </div>\r\n                <form className=\"addRoomAllotment__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"addRoomAllotment__bodyFormFirstRow\">\r\n                        <div className=\"addRoomAllotment__bodyFormFirstRowLeft\">\r\n                            <TextField placeholder=\"R01\" label=\"Room Number\" InputLabelProps={{ shrink: true }} onChange={(e) => {setRoomNumber(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required error={false} helperText={true ? null : \"Wrong email pattern\"} placeholder=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField placeholder=\"PA02\" label=\"Patient Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientId(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField required placeholder=\"Abdul Latif\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField required placeholder=\"DA03\" label=\"Doctor Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorId(e.target.value)}} variant=\"outlined\"/>\r\n                        </div>\r\n                        <div className=\"addRoomAllotment__bodyFormFirstRowRight\">\r\n                            <TextField select \r\n                                label=\"Room Type\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setRoomType(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='general'>General</option>\r\n                                    <option  value='acRoom'>AC ROOM</option>\r\n                                    <option  value='icu'>ICU</option>\r\n                            </TextField>\r\n                            <TextField type=\"date\" label=\"Allotment Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAllotmentDate(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField type=\"date\" label=\"Discharge Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDishchargeDate(e.target.value)}}  variant=\"outlined\" /> \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addRoomAllotment__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add Allotment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRoomAllotment\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Button, ButtonGroup, Chip, IconButton, TextField, Tooltip } from '@material-ui/core';\r\nimport { AssessmentOutlined, AssignmentOutlined, DeleteOutlined, Edit, GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'roomNo', numeric: false, disablePadding: true, label: 'Room No' },\r\n  { id: 'roomType', numeric: true, disablePadding: false, label: 'Room Type' },\r\n  { id: 'patientName', numeric: true, disablePadding: false, label: 'Patient Name' },\r\n  { id: 'doctorName', numeric: true, disablePadding: false, label: 'Doctor Name' },\r\n  { id: 'allotmentDate', numeric: true, disablePadding: false, label: 'Allotment Date' },\r\n  { id: 'dischargeDate', numeric: true, disablePadding: false, label: 'Discharge Date' },\r\n  { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          All Rooms\r\n        </Typography>\r\n      )}\r\n        {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const componentRef = React.useRef();\r\n\r\n  function createData(roomNo, roomType, patientName, doctorName, allotmentDate, dischargeDate, status) {\r\n    return { roomNo, roomType, patientName, doctorName, allotmentDate, dischargeDate, status };\r\n  }\r\n  const rows = [\r\n    createData('R01', 'General', 'Ahmed Ullah', 'Zakir Hossain', '10-20-20', '22-10-20', <Chip size='small' label=\"avaiable\" color='primary' />),\r\n    createData('R02', 'AC', 'Ahmed Ullah', 'Zakir Hossain','10-20-20', '-', <Chip size='small' label=\"not discharged\" color='secondary' />),\r\n    createData('R03', 'ICU', '-', '-','-', '-',  <Chip size='small' label=\"not allot\" color='default' />),\r\n  ];\r\n\r\n  const deleteHandler = (e) => {\r\n    console.log(\"api should be added for delete patient where id = \" + selected[0])\r\n  }\r\n\r\n  const printAction = useReactToPrint({\r\n    content: () => componentRef.current\r\n  })\r\n\r\n  const handleAlert = (e) => {\r\n    e.preventDefault()\r\n    setAlert(!alert)\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.roomNo);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, roomNo) => {\r\n    const selectedIndex = selected.indexOf(roomNo);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, roomNo);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (roomNo) => selected.indexOf(roomNo) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <div style={{flex: 0.9}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Select a patient please!</Alert> : null}\r\n            </div>\r\n            <TextField\r\n            label=\"Search Patient\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n        </div>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer >\r\n          <Table ref={componentRef}\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.roomNo);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.roomNo)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.roomNo}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.roomNo}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.roomType}</TableCell>\r\n                      <TableCell align=\"right\">{row.patientName}</TableCell>\r\n                      <TableCell align=\"right\">{row.doctorName}</TableCell>\r\n                      <TableCell align=\"right\">{row.allotmentDate}</TableCell>\r\n                      <TableCell align=\"right\">{row.dischargeDate}</TableCell>\r\n                      <TableCell align=\"right\">{row.status}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    <div className=\"megatable__print\">\r\n      <ButtonGroup size={window.innerWidth < 768 ? 'small' : 'medium'} style={{marginTop: 20}} color=\"default\" aria-label=\"outlined primary button group\">\r\n          <Button onClick={printAction}><PrintOutlined/>&nbsp;PRINT</Button>\r\n          <Button><PictureAsPdfOutlined/>&nbsp;PDF</Button>\r\n          <Button><GetAppOutlined/>&nbsp;CSV</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    <div className=\"megatable__ActionButtons\" style={{marginTop: 20}}>\r\n      {\r\n        selected.length != 0 ?\r\n          <Link to={`editRoomAllotment/${selected[0]}`} style={{textDecoration: 'none'}}>\r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n            >\r\n              Edit Allotment\r\n            </Button>\r\n          </Link> : \r\n            <Button\r\n              size={window.innerWidth < 768 ? 'small' : 'medium'}\r\n              onClick={handleAlert}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<Edit />}\r\n              >\r\n              Edit Allotment\r\n          </Button>\r\n      }\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Card, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Headline from '../Headline'\r\nimport './AllRooms.css'\r\nimport MegaTable from './MegaTable'\r\n\r\nfunction AllRooms() {\r\n    return (\r\n        <div className=\"allrooms\">\r\n            <Headline headline=\"All Rooms\" title='All Rooms'/>\r\n            <Card className=\"allrooms__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">All Rooms</Typography>\r\n                </div>\r\n                <div className=\"allrooms__bodyTable\">\r\n                    <MegaTable />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllRooms\r\n","import React, { useState } from 'react'\r\nimport './AddRoom.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControlLabel, TextField, Typography } from '@material-ui/core'\r\n\r\nfunction AddRoomAllotment() {  \r\n    const [roomNumber, setRoomNumber] = useState('')\r\n    const [roomType, setRoomType] = useState('general')\r\n    const [details, setDetails] = useState('')\r\n\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"addRoom\">\r\n            <Headline headline=\"Add Room\" title='Add Room'/>\r\n            <Card className=\"addRoom__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Add Room</Typography>\r\n                </div>\r\n                <form className=\"addRoom__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"addRoom__bodyFormFirstRow\">\r\n                            <TextField placeholder=\"R01\" label=\"Add Room\" InputLabelProps={{ shrink: true }} onChange={(e) => {setRoomNumber(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField select \r\n                                label=\"Room Type\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setRoomType(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option value='general'>General</option>\r\n                                    <option value='acRoom'>AC ROOM</option>\r\n                                    <option value='icu'>ICU</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"\" label=\"Details\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDetails(e.target.value)}} multiline rows=\"4\" variant=\"outlined\" />\r\n                    </div>\r\n                    <div className=\"addRoom__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add Room\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRoomAllotment\r\n","import React, { useState } from 'react'\r\nimport './EditRoomAllotment.css'\r\nimport Headline from '../Headline'\r\nimport { Button, Card, Checkbox, FormControl, FormControlLabel, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction EditRoomAllotment() {  \r\n    const [roomNumber, setRoomNumber] = useState('')\r\n    const [patientName, setPatientName] = useState('')\r\n    const [patientId, setPatientId] = useState('')\r\n    const [doctorName, setDoctorName] = useState('')\r\n    const [doctorId, setDoctorId] = useState('')\r\n\r\n    const [roomType, setRoomType] = useState('general')\r\n    const [allotmentDate, setAllotmentDate] = useState('')\r\n    const [dischargeDate, setDishchargeDate] = useState('')\r\n\r\n    const [checked, setChecked] = useState(false)\r\n    let {allotmentId} = useParams()\r\n\r\n\r\n    const submit = () => {\r\n        alert('submited')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"editRoomAllotment\">\r\n            <Headline headline=\"Edit Room Allotment\" title='Edit Room Allotment'/>\r\n            <Card className=\"editRoomAllotment__body\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Edit Room Allotment</Typography>\r\n                </div>\r\n                <form className=\"editRoomAllotment__BodyForm\" onSubmit={submit}>\r\n                    <div className=\"editRoomAllotment__bodyFormFirstRow\">\r\n                        <div className=\"editRoomAllotment__bodyFormFirstRowLeft\">\r\n                            <TextField disabled value=\"R01\" label=\"Room Number\" InputLabelProps={{ shrink: true }} onChange={(e) => {setRoomNumber(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField required error={false} helperText={true ? null : \"Wrong email pattern\"} value=\"John Doe\" label=\"Patient Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientName(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField value=\"PA02\" label=\"Patient Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setPatientId(e.target.value)}} variant=\"outlined\" />\r\n                            <TextField required value=\"Abdul Latif\" label=\"Doctor Name\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorName(e.target.value)}} variant=\"outlined\"/>\r\n                            <TextField required value=\"DA03\" label=\"Doctor Id\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDoctorId(e.target.value)}} variant=\"outlined\"/>\r\n                        </div>\r\n                        <div className=\"editRoomAllotment__bodyFormFirstRowRight\">\r\n                            <TextField select \r\n                                label=\"Room Type\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={(e) => setRoomType(e.target.value)}\r\n                                variant=\"outlined\">\r\n                                    <option  value='general'>General</option>\r\n                                    <option  value='acRoom'>AC ROOM</option>\r\n                                    <option  value='icu'>ICU</option>\r\n                            </TextField>\r\n                            <TextField type=\"date\" label=\"Allotment Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setAllotmentDate(e.target.value)}}  variant=\"outlined\" />\r\n                            <TextField type=\"date\" label=\"Discharge Date\" InputLabelProps={{ shrink: true }} onChange={(e) => {setDishchargeDate(e.target.value)}}  variant=\"outlined\" /> \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editRoomAllotment__bodyFormSecondRowCheckBox\">\r\n                        <FormControlLabel control={<Checkbox required onChange={(e) => setChecked(!checked)} color=\"primary\"/>} label=\"Please Confirm\"/>\r\n                    </div>\r\n                    <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Edit Allotment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRoomAllotment\r\n","import React from 'react';\nimport \"./App.css\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport SideBar from './components/SideBar'\nimport TopBar from './components/TopBar'\nimport Dashboard from './components/Dashboard'\nimport AddDoctor from './components/doctors/AddDoctor'\nimport AllDoctors from './components/doctors/AllDoctors';\nimport EditDoctor from './components/doctors/EditDoctor';\nimport DetailsDoctor from './components/doctors/DetailsDoctor';\n\nimport AddPatient from './components/patients/AddPatient';\nimport AllPatients from './components/patients/AllPatients';\nimport EditPatient from './components/patients/EditPatient';\nimport DetailsPatient from './components/patients/DetailsPatient';\n\nimport AddAppoinment from './components/appoinments/AddAppoinment';\nimport AllAppoinments from './components/appoinments/AllAppoinments';\nimport EditAppoinment from './components/appoinments/EditAppoinment';\nimport DetailsAppoinment from './components/appoinments/DetailsAppoinment';\n\nimport AddRoomAllotment from './components/roomAllotments/AddRoomAllotment';\nimport AllRooms from './components/roomAllotments/AllRooms'\nimport AddRoom from './components/roomAllotments/AddRoom'\nimport EditRoomAllotment from './components/roomAllotments/EditRoomAllotment'\n\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {\n        false ?\n         <h1>Login</h1>\n        :\n        <div className=\"app__body\">\n        <BrowserRouter>\n              <SideBar/>\n              <div className=\"app__bodyRight\">\n                <TopBar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n\n                    <Route exact path=\"/addDoctor\" component={AddDoctor}/>\n                    <Route exact path=\"/allDoctors\" component={AllDoctors}/>\n                    <Route exact path=\"/editDoctor/:doctorId\" component={EditDoctor}/>\n                    <Route exact path=\"/detailsDoctor/:doctorId\" component={DetailsDoctor}/>\n\n                    <Route exact path=\"/addPatient\" component={AddPatient}/>\n                    <Route exact path=\"/allPatients\" component={AllPatients}/>\n                    <Route exact path=\"/editPatient/:patientId\" component={EditPatient}/>\n                    <Route exact path=\"/detailsPatient/:patientId\" component={DetailsPatient}/>\n\n                    <Route exact path=\"/addAppoinment\" component={AddAppoinment}/>\n                    <Route exact path=\"/allAppoinments\" component={AllAppoinments}/>\n                    <Route exact path=\"/editAppoinment/:appoinmentId\" component={EditAppoinment}/>\n                    <Route exact path=\"/detailsAppoinment/:appoinmentId\" component={DetailsAppoinment}/>\n\n                    <Route exact path=\"/addRoomAllotment\" component={AddRoomAllotment}/>\n                    <Route exact path=\"/allRooms\" component={AllRooms}/>\n                    <Route exact path=\"/addRoom\" component={AddRoom}/>\n                    <Route exact path=\"/editRoomAllotment/:appoinmentId\" component={EditRoomAllotment}/>\n\n\n\n                    \n\n\n\n\n\n\n\n\n                </Switch>\n              </div>\n          </BrowserRouter>\n      </div> \n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Types from '../actions/types'\r\n\r\nconst init = {\r\n    adminLoggedIn: false,\r\n    error: {},\r\n}\r\n\r\nconst adminReducer = (state=init, action) => {\r\n    switch(action.type) {\r\n        case Types.ADMIN_AUTH: {\r\n            return {\r\n                adminLoggedIn: action.payload.admin ? true : false,\r\n                error: {}\r\n            }\r\n        }\r\n        case Types.ADMIN_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default adminReducer","export const SET_ADMIN = 'SET_ADMIN'\r\nexport const ADMIN_AUTH = \"ADMIN_AUTH\";\r\nexport const ADMIN_ERROR = \"ADMIN_ERROR\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux'\r\nimport adminReducer from './adminReducer'\r\n\r\n\r\n \r\nconst rootReducer = combineReducers({\r\n    admin: adminReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore, compose, applyMiddleware } from 'redux' \r\nimport rootReducer from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport {loadState, saveState} from './localStorage'\r\n\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(rootReducer, persistedState, compose(\r\n    applyMiddleware(...middlewares)\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\n// store.subscribe(() => {\r\n//   saveState(store.getState());\r\n// });\r\n\r\n// store.subscribe(() => {\r\n//   saveState({\r\n//     busket: store.getState().busket\r\n//   });\r\n// });\r\n\r\n\r\nexport default store","\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}